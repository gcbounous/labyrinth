TODO:

Errors:
    - create custom errors 
        - PointError - point already exists in map/ point out of map bounds
        - BoundError - map not closed by walls/exit/start
        - Exit/StarError - exit not in wall bound/ more than one exit or start

Documentation:
    - game
    - labyrinth
    - robot
    - door
    - exit
    - floor
    - map_object
    - point
    - start
    - wall

Labyrinth:
    - load maps
    - load game (old or new)
    - play
    - check for game status (if in_game ask to save)
    - Game menu
        - arrow/letters (for directions) (qwerty or azerty (french mode))
        - player name
        - map menu
            - map editor/creator
            - delete map
            - load map (new map)

Map Editor/Creator
    - map checker (check if map has good caracteristics)

DBSql:

DBText:
    - refactor saved games
    - refactor map (text + robot) (caso seja so um mapa salvo passar robot_point = None, nao precisa salvar) 

Improvements:
    - make a class inside globals only with gobal variables (like a enum) http://stackoverflow.com/questions/702834/whats-the-common-practice-for-enums-in-python
    - only show maze after door is opened once
    - score
    - make one way doors (< > ^ v)
    - 

    - Game
        - arrows for directions
        - use number before walking 

DONE:
    - Point
    - Game:
        -(OK) convert text -> object 
        -(OK) convert obj -> text (str/repr) 
        -(OK) start()
        -(OK) load_robot()
        -(OK) play()
        -(OK) passes through a door
        -(OK) to pass through door reload in steps (animation_like)
        -(OK) move "on keypress" 
        
    - Robot:
        -(OK) make it walk
            - move up /move down / move r/ move l
